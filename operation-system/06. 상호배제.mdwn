# 상호배제

- Mutual Exclusion
- 병행 프로세스에서 프로세스 하나가 공유 자원을 이용할 때 다른 프로세스들이 그 공유자원을 이용할 수 없도록 하는 방법
- 동기화를 해줘야 함
  - 동기화 : 공유 자원을 동시에 실행시키지 못하도록 실행을 제어하는 방법
  - 동기화를 이용해서 상호배제를 할 수 있지만 **교착 상태와 기아 상태**가 발생할 수 있다.
- 프로세스가 수정할 수 있는 공유 데이터에 접근할 때만 적용한다

# 임계 자원과 임계 영역

- 임계 자원 : 두 프로세스가 동시에 사용할 수 있는 공유 자원
- 임계 영역 : 임계 자원에 접근하고 실행하는 프로그램 코드 부분
  - 상호배제를 수행하는 방법 중 하나
  - 다수의 프로세스가 접근할 수 있지만 어느 순간에는 프로세스 하나만 사용 가능
  - 특정 프로세스가 임계 영역으로 들어오면 다른 프로세스는 접근할 수 없도록 해야함
- 임계 영역은 다음 3가지 조건을 만족해야함
  1. 상호배제 : 어떤 프로세스가 임계 영역에 있으면 다른 프로세스는 임계 영역으로 못 들어옴
  2. 진행 : 임계 영역에 프로세스가 없는 상태에서 여러 프로세스가 임계 영역으로 들어가려 한다면 어떤 프로세스를 들일지 적절히 결정해야함
  3. 한정 대기 : 다른 프로세스가 임계 영역을 무한정 기다리는 거슬 막으려면 한 번 들어간 프로세스에게 일정한 패널티를 준다

# 생산자 소비자 문제에서 상호배제

- 생산자 소비자 문제 : 운영체제에서 비동기적으로 수행하는 모델
  - 생산자 프로세스가 생산에 관한 정보를 소비자 프로세스가 소비ㅏ는 형태
  - ex) 컴파일러 - 어셈블러, 어셈블러 - 로더
    - 컴파일러(생산자) - 어셈블리 코드 생성 - 어셈블러(소비자)가 어셈블리 코드를 실행
    - 어셈블러(생산자) - 적재 모듈 - 로더(소비자)가 적재 모듈을 로드
- 생산자 소비자에서 생산자가 소비자한테 데이터를 안 주면 소비자는 계속해서 대기
