# 프로토콜

- 어떤 표준 협회나 기관이 규정한 통신 규약
- 물리적인 측면과 논리적인 측면에서 요즘 많이 사용하는 프로토콜이 있음
  - 물리적 측면 : 이더넷 - 데이터 전송 매체, 신호 규약, 회선 규약
  - 논리적 측면 : TCP/IP - 기기간 통신 규격
- TCP/IP 는 프로토콜이라고 부르지 않고 여러 프로토콜 (HTTP, SMTP, UDP, TCP, IP) 로 결합된 **프로토콜 스택**이라고 불림

# OSI 7 Layer 와 TCP/IP 모델

- OSI 7 Layer
  - 네트워크 통신의 전반에 걸친 과정을 나누어 계층별로 정의
  - 과거에는 네트워크 통신을 위한 다양한 부분에서 독립적으로 작업이 이루어지고 개발되어 상용화 되어있었는데, 이 것들을 하나의 규약으로 통합하려는 노력에 의해 생겨난 것
  - 물데네전세표응, do not touch steves pet aligator
- 상위 계층과 하위 계층
  - 상위 계층 - 애플리케이션 계층
  - 하위 계층 - 데이터 플로우 계층
    - 데이터를 상대방에게 잘 보내는 것을 목표로 하는 계층
- 일반적으로 네트워크 엔지니어는 하위 계층(데이터 플로우)를 주로 다루다 보니 상향식 접근 (1 ~ 7) 을 주로 하고 개발자는 상위 계층을 다뤄 서 하향식 접근 (7 ~ 1) 을 주로 한다

# OSI 모델과 TCP/IP 모델

- OSI 모델
  - _Layer 1_ : Application Layer
  - _Layer 2_ : Presentation Layer
  - _Layer 3_ : Session Layer
  - _Layer 4_ : Transport Layer
  - _Layer 5_ : Network Layer
  - _Layer 6_ : DataLink Layer
  - _Layer 7_ : Physical Layer
- TCP/IP 모델
  - _Layer 1_ : Application Layer : Application + Presentation + Session
  - _Layer 2_ : Transport Layer : Transport
  - _Layer 3_ : Internet : Network
  - _Layer 4_ : Network Access : Data Link + Physical

# Layer 1 : Physical, 물리 계층

- 물리적인 연결에 대한 정보 정의
- 주로 전기 신호를 잘 전달하는 데 초점이 맞춰짐
- 장비 : 허브, 리피터, 케이블, 커넥터, 트랜시버, 탭
  - 허브 : 같은 허브에 연결된 컴퓨터와 네트워크 장비를 상호간에 통신할 수 있도록 하는 것
- 주소의 개념이 없음
- 전기 신호를 이용하기 때문에 Bit 단위를 사용함
- 주요 프로토콜 : 케이블

# Layer 2 : Data Link, 데이터 링크 계층

- 전기 신호를 모아서 우리가 알아볼 수 있는 데이터의 형태로 변환함
- 1계층이 전기 신호를 전달하고 잘 받는게 목적이었다면 2계층은 **주소 정보를 정의**하고 정확한 주소로 통신이 되도록 하는 데에 초점이 맞춰짐
  - 주소 체계로 **MAC** 주소를 사용함
  - NIC(LAN 카드) 를 이용하는데, 여기에는 고유한 주소인 MAC 이 있음
- 1계층에서 받은 전기 신호는 주소 개념이 없지만 2계층에서는 주소의 개념이 있기 때문에 다음과 같은 것들이 가능해짐
  - 오류 제어 : 주소를 이용해 나한테 온 데이터가 맞는지 확인할 수 있음
  - 여러 명과 데이터 통신이 가능해짐
- 흐름 제어
  - 여러 명과 통신이 가능해지면서 마구잡이로 데이터를 날리는게 아니라 상대방이 **통신 가능 상태인지 확인**하는 작업이 추가됨
  - 이를 Flow-Control 이라고 함
- 장비 : 스위치, NIC(네트워크 인터페이스 카드: 네트워크를 연결해주는 카드나 인터페이스로 LAN 카드라고도 함)
  - 스위치 : 연결된 다른 단말기가 어떤 MAC 주소인지, 포트인지를 확인하고 이 데이터를 기반으로 특정 단말기로 적절히 포트포워딩
- 단위로는 프레임을 이용함
- 주요 프로토콜 : IEEE 802.2

# Layer 3 : Network Layer, 네트워크 계층

- 2계층에서는 물리적인 MAC 주소를 이용했다면 3계층에서는 논리적인 IP 주소가 정의됨
  - IP 주소는 Network 부분과 Host 부분으로 나뉨
  - IP 주소는 사용자 환경에 맞게 변경할 수 있음
- 3계층에서 사용되는 장비는 IP를 이용해서 네트워크를 구분하고 통신을 위한 원격지 경로 지정을 할 수 있음
- 장비 : 라우터
  - 라우터는 IP 주소를 활용해서 최적의 경로를 찾고 해당 경로로 IP를 전송함
- 단위로는 패킷을 이용함
- 주요 프로토콜 : ARP, IPv4, IPv6

# Layer 4 : Transport Layer, 전송 계층

- 1, 2, 3 계층에서는 데이터를 잘 받고 잘 전달하는 데(데이터 신호가 잘 만들어 지는가) 에 집중하지만 실질적으로 정상 전송 수신이 되었는지 확인하는 구간이 없음
- 전송 계층에서 이러한 작업을 수행함
  - 전송 계층에서 신뢰가 있기 때문에 Application Layer 에서는 더 이상 물리적인 네트워크 데이터를 신경쓰지 않을 수 있게 되는 것임
- 패킷 네트워크는 데이터를 패킷에 실어 보내니까 중간에 패킷이 유실되거나 순서가 바뀔 수 있음
  - 이 문제를 해결하는 곳이 바로 Transport Layer 임
- 4 계층에서 패킷을 분할할 때 패킷 헤더에 보내는 순서와 받는 순서를 적어서 통신
  - 캐시이 유실되면 재전송 요청, 순서가 바뀌더라도 바로잡기 가능
- Sequence Number, ACK, Port 를 사용함
  - Sequence Number(seq) : 패킷을 보내는 순서
  - ACK : 패킷을 받는 순서
  - Port : 애플리케이션을 서로 구분할 수 있도록 함
- 장비 : 로드밸런서, 방화벽
- 주요 프로토콜 : TCP, UDP

# Layer 5 : Session Layer, 세션 계층

- 응용 프로세스가 연결을 성립하도록 도와주고 연결이 안정적으로 유지되도록 관리하는 레이어
  - 물론 작업이 완료되면 연결을 끊음
- TCP/IP 의 Session 을 관리하고, 에러로 중단된 통신에 대한 에러 복구와 재전송 수행
- 주요 프로토콜 : SSH, NFS, RCP

# Layer 6 : Presentation Layer, 표현 계층

- 표현 방식이 다른 애플리케이션이나 시스템 간의 통신을 돕기 위해서 일종의 번역과 디코딩 인코딩을 수행하는 레이어
- 주요 프로토콜 : TLS, AFP, SSH

# Layer 7 : Application Layer, 애플리케이션 레이어

- 애플리케이션 프로세스를 정의하고 서비스를 수행하는 계층
- 웹 브라우저나 데스크톱 프로그램이 해당됨
- 주요 프로토콜 : HTTP, HTTPS, SMTP, TELNET

# 인캡슐레이션과 디캡슐레이션

- 각 계층에서 상위 혹은 하위 계층으로 전달할 때 데이터를 조작하는 방법
- 현대는 패킷 기반 네트워크를 이용
  - 패킷 기반 네트워크 : 데이터를 패킷이라는 단위로 쪼개는 방법
  - 패킷을 쪼개고 목적지로 전달하며 패킷을 조합하여 데이터로 변환함
- 인캡슐레이션 : 상위 계층에서 하위 계층으로
  - 데이터를 미리 정의된 비트 단위로 변경
- 디캡슐레이션 : 하위 계층에서 상위 계층으로
  - 비트를 데이터로 변경
